name: Connect via VPN and Run Workflow

on:
  workflow_dispatch:
  repository_dispatch:
    types: [manual-trigger]
  push:
    branches:
      - main

jobs:
  vpn-job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ODBC Driver 17
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17
          sudo apt-get install -y unixodbc-dev

      - name: Install OpenVPN
        run: sudo apt-get install -y openvpn

      - name: Create VPN Configuration
        env:
          VPN_CONFIG: ${{ secrets.VPN_OVPN_BASE_64 }}
        run: |
          # Decode base64 and create VPN config file
          echo "$VPN_CONFIG" | base64 -d > config.ovpn
          # Verify config file
          if [ -s config.ovpn ]; then
            echo "VPN config created successfully"
          else
            echo "Error: VPN config is empty!"
            exit 1
          fi
          # Set secure permissions
          chmod 600 config.ovpn

      - name: Create VPN Credentials
        env:
          VPN_USERNAME: ${{ secrets.VU }}
          VPN_PASSWORD: ${{ secrets.VP }}
        run: |
          echo "$VPN_USERNAME" > auth.txt
          echo "$VPN_PASSWORD" >> auth.txt
          chmod 600 auth.txt

      - name: Establish VPN Connection
        run: |
          echo "Starting VPN connection..."
          sudo openvpn --config config.ovpn --auth-user-pass auth.txt --daemon
          echo "Waiting for VPN to initialize..."
          sleep 15
          echo "VPN connection status:"
          ip a show tun0 || (echo "VPN connection failed!"; exit 1)

      # Rest of your workflow remains the same
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.1'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Python Script
        run: python sqlconn3.py
        env:   
          SSH_KEY_PATH: ./neha_key.pem
          SSH_KEY: ${{ secrets.SSH_KEY }}
          MSH: ${{ secrets.MSH }}
          SSH: ${{ secrets.SSH }}
          SSU: ${{ secrets.SSU }}
          DBH: ${{ secrets.DBH }}
          MSU: ${{ secrets.MSU }}
          MSP: ${{ secrets.MSP }}
          MSN: ${{ secrets.MSN }}
          ASS: ${{ secrets.ASS }}
          ASD: ${{ secrets.ASD }}
          ASU: ${{ secrets.ASU }}
          ASP: ${{ secrets.ASP }}
